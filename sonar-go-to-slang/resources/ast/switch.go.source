package main

import "fmt"

func main() {
    tag := 1
    switch tag {
        default: fmt.Println("default")
        case 0, 1, 2: fmt.Println("123")
        case 4, 5, 6, 7: fmt.Println("4567")
    }

    x := 4
    y := 2
    z := 3

    switch { // missing switch expression means "true"
        case x < y: fmt.Println("xy")
        case x < z: fmt.Println("xz")
        case x == 4: fmt.Println("x")
    }

    switch x := f(); {
        case x < 0: fmt.Println("x<0")
        default: fmt.Println("default")
    }

    var intType interface{} = "abc"

    switch i := intType.(type) { // This is a TypeSwitchStmt (others are SwitchStmt in this file)
        case nil:
            fmt.Println("type of i is type of x (interface{})")
            break
        case int, bool:
            fmt.Println("type of i is int or bool") // type of i is type of x (interface{})
        case func(int) float64:
            fmt.Println("type of i is func(int)")
            fallthrough
        case string:
            fmt.Println("type is string and the value is " + i)
        default:
            fmt.Println("don't know the type")
    }
}

func f() int {
	return -42
}