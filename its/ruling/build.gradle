dependencies {
    testCompile 'org.sonarsource.orchestrator:sonar-orchestrator'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.sonarsource.analyzer-commons:sonar-analyzer-commons'
}

sonarqube.skipProject = true

test {
    onlyIf {
        project.hasProperty("its") ||
                project.hasProperty("ruling") ||
                project.hasProperty("ruling-kotlin") ||
                project.hasProperty("ruling-ruby") ||
                project.hasProperty("ruling-scala")
    }
    if (project.hasProperty("ruling-kotlin")) {
        filter { includeTestsMatching 'org.sonarsource.slang.SlangRulingTest.test_kotlin' }
    } else if (project.hasProperty("ruling-ruby")) {
        filter { includeTestsMatching 'org.sonarsource.slang.SlangRulingTest.test_ruby' }
    } else if (project.hasProperty("ruling-scala")) {
        filter { includeTestsMatching 'org.sonarsource.slang.SlangRulingTest.test_scala' }
    }
    systemProperty 'java.awt.headless', 'true'
    outputs.upToDateWhen { false }
}
